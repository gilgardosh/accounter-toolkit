sources:
  - name: Hashavshevet
    handler:
      jsonSchema:
        endpoint: 'https://{context.hashavshevetUrl}/'
        queryStringOptions:
          indices: true
        operationHeaders:
          Authorization: 'Bearer {context.authToken}'
          host: '{context.hashavshevetUrl}'
          Content-Type: application/x-www-form-urlencoded
          Accept: application/json
        operations:
          - type: Query
            field: getSession
            path: /api/napi
            method: POST
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getSessionResponse
          - type: Query
            field: getCompanies
            path: /CompanyListToTokenApi/TokenCompanies
            method: POST
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getCompaniesResponse

          - type: Query
            field: getRecordsRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getRecordsRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getRecordsResponse

          - type: Query
            field: getTransactionsRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getTransactionsRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getTransactionsResponse
          - type: Mutation
            field: importTransactionsToBatch
            path: /jtransApi/tmpBatch
            method: POST
            requestSchema: ./json-schemas/importTransactionsToBatchRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/importTransactionsToBatchResponse

          - type: Mutation
            field: createBatch
            path: /jtransApi/newBatch
            method: POST
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/createBatch
          - type: Query
            field: getBatchRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getBatchRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getBatchResponse
          - type: Query
            field: checkBatch
            path: /jtransApi/chkBatch
            method: POST
            requestSchema: ./json-schemas/checkBatchRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/checkBatchResponse
          - type: Mutation
            field: issueBatch
            path: /jtransApi/issueBatch
            method: POST
            requestSchema: ./json-schemas/issueBatchRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/issueBatchResponse

          - type: Query
            field: getAccountsRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getAccountsRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getAccountsResponse
          - type: Mutation
            field: importAccounts
            path: /IndexApi/importIndex
            method: POST
            requestSchema: ./json-schemas/hashavshevetSchema.json#/definitions/importAccountsRequest
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/importAccountsResponse
          # deleteAccounts (deleteIndexRecords)

          # importItems (importIndexRecords)
          # deleteItems (deleteIndexRecords)

          - type: Query
            field: getBankPageRecordsRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getBankPageRecordsRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getBankPageRecordsResponse
          - type: Mutation
            field: importBankPage
            path: /BankPagesApi/importBankPage
            method: POST
            requestSchema: ./json-schemas/importBankPageRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/importBankPageResponse

            # createDocument
            # showDocument
            # delDocument
            # issueDoc

            # crmActivities
            # crmActivitiesTest

          - type: Query
            field: getSortCodesRaw
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getSortCodesRawRequest.json
            responseSchema: ./json-schemas/hashavshevetSchema.json#/definitions/getSortCodesResponse

    transforms:
      - resolversComposition:
          mode: bare
          compositions:
            - resolver: Mutation.importAccounts
              composer: resolvers/import-accounts-resolver
serve:
  browser: false

sdk:
  generateOperations:
    selectionSetDepth: 5

additionalTypeDefs: |
  extend type Transaction {
    batch: Batch
    records: [RecordType]
    creditor: Account
    debtor: Account
  }
  extend type Batch {
    transactions: [Transaction]
  }
  extend type RecordType {
    transaction: Transaction
    batch: Batch
    account: Account
    counterAccount: Account
  }
  extend type BankPageRecord {
    account: Account
  }
  extend type importTransactionsToBatchResponse {
    batch: Batch
  }  extend type SortCode {
    accounts: [Account]
  }
  extend type Account {
    sortCode: SortCode
  }

  extend type Query {
    getSortCodes: getSortCodesResponse
    getAccounts(input: getAccountsInput): getAccountsResponse
    getRecords(input: getRecordsInput): getRecordsResponse
    getTransactions(input: getTransactionsInput): getTransactionsResponse
    getBatch(input: getBatchInput): getBatchResponse
    getBankPageRecords(input: getBankPageRecordsInput): getBankPageRecordsResponse
  }
  input getAccountsInput {
    idMin: String
    idMax: String
    sortCodeMin: Int
    sortCodeMax: Int
    nameMin: String
    nameMax: String
  }
  input getRecordsInput {
    idMin: Int
    idMax: Int
    transactionIdMin: Float
    transactionIdMax: Float
    accountIdMin: String
    accountIdMax: String
    ounterAccountIdMin: String
    ounterAccountIdMax: String
    debitOrCreditNumberMin: Float
    debitOrCreditNumberMax: Float
  }
  input getTransactionsInput {
    batchIdMin: Int
    batchIdMax: Int
    creditorIdMin: String
    creditorIdMax: String
    debtorIdMin: String
    debtorIdMax: String
    dueDateMin: String
    dueDateMax: String
    idMin: Int
    idMax: Int
    shekelSumMin: Float
    shekelSumMax: Float
    valueDateMin: String
    valueDateMax: String
  }
  input getBatchInput {
    idMin: Int
    idMax: Int
    statusMin: String
    statusMax: String
    initDateMin: String
    initDateMax: String
  }
  input getBankPageRecordsInput {
    idMin: Int
    idMax: Int
    bankPageIdMin: Int
    bankPageIdMax: Int
    dateMin: String
    dateMax: String
  }

additionalResolvers:
  - ./resolvers/mesh-resolvers.js
